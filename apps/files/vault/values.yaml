global:
  tlsDisable: false
ui:
  enabled: true
  activeVaultPodOnly: true
  externalPort: %(webPort)d
  targetPort: %(webPort)d
server:
  extraArgs: "-config=/vault/secrets/server-config"
  logLevel: trace
  annotations:
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/agent-pre-populate-only: 'true' # No sidecar
    vault.hashicorp.com/role: 'vault'
    vault.hashicorp.com/agent-configmap: 'vault-agent-autounseal'
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      config: ""
  dataStorage:
    size: 2Gi
    storageClass: local-path
  auditStorage:
    enabled: true
    size: 1Gi
    storageClass: local-path
  volumes:
    - name: "vault-tls"
      secret:
        secretName: %(tlsSecret)s
    - name: "vault-tls-web"
      secret:
        secretName: %(webSecret)s
  volumeMounts:
    - mountPath: "/vault-tls"
      name: "vault-tls"
    - mountPath: "/vault-tls-web"
      name: "vault-tls-web"
  extraEnvironmentVars:
    VAULT_CACERT: "/vault-tls/tls.crt"
  extraLabels:
    unseal-injector: enabled
  # Changed from required to preferred because for some reason even a single pod fails to deploy on my test cluster.
  # And since I've changed this, might as well deploy all 3 even on my test cluster.
  affinity: |
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: {{ template "vault.name" . }}
              app.kubernetes.io/instance: "{{ .Release.Name }}"
              component: server
          topologyKey: kubernetes.io/hostnameinjector:
  enabled: true
  webhook:
    objectSelector:
      matchLabels:
        vault-injector: enabled
