apiVersion: tanka.dev/v1alpha1
data:
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: cert-manager
    namespace: flux-system
  spec:
    interval: 24h
    url: https://charts.jetstack.io
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: cert-manager
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: cert-manager
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: cert-manager
          namespace: flux-system
        version: 1.10.1
    dependsOn:
    - name: prometheus-stack
    - name: longhorn
    - name: kubernetes-reflector
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: cert-manager
    values:
      installCRDs: "true"
- apiVersion: v1
  data:
    alertmanager.yaml: Z2xvYmFsOgogIHJlc29sdmVfdGltZW91dDogNW0Kcm91dGU6CiAgcmVjZWl2ZXI6ICJudWxsIgogIGdyb3VwX2J5OgogIC0gbmFtZXNwYWNlCiAgcm91dGVzOgogIC0gcmVjZWl2ZXI6IHNsYWNrLW5vdGlmaWNhdGlvbnMKICAgIGdyb3VwX2J5OgogICAgLSBhcHAKICAgIG1hdGNoZXJzOgogICAgLSBzZXZlcml0eSA9fiBjcml0aWNhbHx3YXJuaW5nCiAgICBjb250aW51ZTogdHJ1ZQogICAgZ3JvdXBfd2FpdDogMzBzCiAgICBncm91cF9pbnRlcnZhbDogNW0KICAgIHJlcGVhdF9pbnRlcnZhbDogMTJoCiAgLSByZWNlaXZlcjogIm51bGwiCiAgICBtYXRjaGVyczoKICAgIC0gYWxlcnRuYW1lID1+ICJJbmZvSW5oaWJpdG9yfFdhdGNoZG9nIgogIGdyb3VwX3dhaXQ6IDMwcwogIGdyb3VwX2ludGVydmFsOiA1bQogIHJlcGVhdF9pbnRlcnZhbDogMTJoCmluaGliaXRfcnVsZXM6Ci0gdGFyZ2V0X21hdGNoZXJzOgogIC0gc2V2ZXJpdHkgPX4gd2FybmluZ3xpbmZvCiAgc291cmNlX21hdGNoZXJzOgogIC0gc2V2ZXJpdHkgPSBjcml0aWNhbAogIGVxdWFsOgogIC0gbmFtZXNwYWNlCiAgLSBhbGVydG5hbWUKLSB0YXJnZXRfbWF0Y2hlcnM6CiAgLSBzZXZlcml0eSA9IGluZm8KICBzb3VyY2VfbWF0Y2hlcnM6CiAgLSBzZXZlcml0eSA9IHdhcm5pbmcKICBlcXVhbDoKICAtIG5hbWVzcGFjZQogIC0gYWxlcnRuYW1lCi0gdGFyZ2V0X21hdGNoZXJzOgogIC0gc2V2ZXJpdHkgPSBpbmZvCiAgc291cmNlX21hdGNoZXJzOgogIC0gYWxlcnRuYW1lID0gSW5mb0luaGliaXRvcgogIGVxdWFsOgogIC0gbmFtZXNwYWNlCnJlY2VpdmVyczoKLSBuYW1lOiAibnVsbCIKLSBuYW1lOiBzbGFjay1ub3RpZmljYXRpb25zCiAgc2xhY2tfY29uZmlnczoKICAtIGFwaV91cmxfZmlsZTogL3ZhdWx0L3NlY3JldHMvc2xhY2std2ViaG9vay11cmwKICAgIGNoYW5uZWw6ICcjYWxhcm1zJwogICAgdXNlcm5hbWU6IEFsZXJ0TWFuYWdlcgp0ZW1wbGF0ZXM6Ci0gL2V0Yy9hbGVydG1hbmFnZXIvY29uZmlnLyoudG1wbAo=
  kind: Secret
  metadata:
    annotations: {}
    name: alert-manager-config
    namespace: default
  type: Opaque
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: prometheus
    namespace: flux-system
  spec:
    interval: 24h
    url: https://prometheus-community.github.io/helm-charts
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: prometheus-stack
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: kube-prometheus-stack
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: prometheus
          namespace: flux-system
        version: 43.1.0
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: monitoring
    values: "alertmanager:\n  alertmanagerSpec:\n    useExistingSecret: true\n    configSecret:
      \n    podMetadata:\n      labels:\n        vault-injector: enabled\n      annotations:\n
      \       vault.hashicorp.com/agent-inject: \"true\"\n        vault.hashicorp.com/agent-pre-populate-only:
      \"true\"\n        vault.hashicorp.com/role: \"alert-manager\"\n        vault.hashicorp.com/service:
      vault.test.wirywolf.com\n        vault.hashicorp.com/agent-inject-secret-slack-webhook-url:
      \"tokens/data/slack\"\n        vault.hashicorp.com/agent-inject-template-slack-webhook-url:
      |\n          {{- with secret \"tokens/data/slack\" -}}\n          {{- .Data.data.alarm_webhook_url
      -}}\n          {{- end -}}\n    storage:\n      volumeClaimTemplate:\n        spec:\n
      \         storageClassName: longhorn\n          resources:\n            requests:\n
      \             storage: 2Gi\nprometheus:\n  prometheusSpec:\n    storage:\n      volumeClaimTemplate:\n
      \       spec:\n          storageClassName: longhorn\n          resources:\n
      \           requests:\n              storage: 2Gi\n  thanosRulerSpec:\n    storage:\n
      \     volumeClaimTemplate:\n        spec:\n          storageClassName: longhorn\n
      \         resources:\n            requests:\n              storage: 2Gi\ndefaultRules:\n
      \ rules:\n    etcd: false\nkubeEtcd:\n  enabled: false\nkubeApiServer:\n  enabled:
      false\nkubeControllerManager:\n  enabled: true\n  endpoints:\n    - 192.168.1.201\n
      \ service:\n    enabled: true\n    port: 10257\n    targetPort: 10257\nkubeScheduler:\n
      \ enabled: true\n  endpoints:\n    - 192.168.1.201\n  service:\n    enabled:
      true\n    port: 10259\n    targetPort: 10259\nkubeProxy:\n  enabled: true\n
      \ endpoints:\n    - 192.168.1.201\n"
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: longhorn
    namespace: flux-system
  spec:
    interval: 24h
    url: https://charts.longhorn.io
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: longhorn
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: longhorn
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: longhorn
          namespace: flux-system
        version: 1.3.2
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: longhorn-system
    values:
      values: |-
        "defaultSettings":
          "backupTarget": "s3://amey-backups-longhorn@us-west-004/"
          "backupTargetCredentialSecret": "longhorn-backup-secret"
          "defaultReplicaCount": 1
          "nodeDownPodDeletionPolicy": "delete-both-statefulset-and-deployment-pod"
        "effect": "NoSchedule"
        "longhornDriver":
          "effect": "NoSchedule"
          "tolerations":
          - "key": "node-role.kubernetes.io/master"
            "operator": "Equal"
            "value": "true"
        "longhornManager":
          "effect": "NoSchedule"
          "tolerations":
          - "key": "node-role.kubernetes.io/master"
            "operator": "Equal"
            "value": "true"
        "longhornUI":
          "tolerations":
          - "key": "node-role.kubernetes.io/master"
            "operator": "Equal"
          "value": "true"
        "persistence":
          "defaultClass": false
          "defaultClassReplicaCount": 1
          "reclaimPolicy": "Delete"
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: kubernetes-reflector
    namespace: flux-system
  spec:
    interval: 24h
    url: https://emberstack.github.io/helm-charts
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: kubernetes-reflector
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: reflector
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: kubernetes-reflector
          namespace: flux-system
        version: 6.1.47
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: cert-manager
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: metallb
    namespace: flux-system
  spec:
    interval: 24h
    url: https://metallb.github.io/metallb
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: metallb
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: metallb
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: metallb
          namespace: flux-system
        version: 0.13.7
    dependsOn:
    - name: prometheus-stack
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: metallb-system
    values: |
      prometheus:
        serviceAccount: "prometheus-stack-kube-prom-prometheus"
        namespace: monitoring
        podMonitor:
          enabled: true
          additionalLabels:
            release: prometheus-stack
        prometheusRule:
          enabled: true
          additionalLabels:
            release: prometheus-stack
- apiVersion: source.toolkit.fluxcd.io/v1beta2
  kind: HelmRepository
  metadata:
    name: traefik
    namespace: flux-system
  spec:
    interval: 24h
    url: https://helm.traefik.io/traefik
- apiVersion: helm.toolkit.fluxcd.io/v2beta1
  kind: HelmRelease
  metadata:
    name: traefik
    namespace: flux-system
  spec:
    chart:
      spec:
        chart: traefik
        interval: 12h
        sourceRef:
          kind: HelmRepository
          name: traefik
          namespace: flux-system
        version: 20.8.0
    dependsOn:
    - name: metallb
    install:
      createNamespace: true
    interval: 30m
    targetNamespace: traefik
    values: |
      service:
        ipFamilyPolicy: PreferDualStack
        spec:
          loadBalancerIP: 192.168.1.210
      rbac:
        enabled: true
      ports:
        web:
          redirectTo: websecure
        websecure:
          tls:
            enabled: true
      podAnnotations:
        prometheus.io/port: 8082
        prometheus.io/scrape: true
      providers:
        kubernetesIngress:
          publishedService:
            enabled: true
      priorityClassName: system-cluster-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
kind: Environment
metadata:
  name: environments/infrastructure/configs
  namespace: default
spec:
  expectVersions: {}
  namespace: default
  resourceDefaults: {}
