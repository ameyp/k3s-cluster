---
{
   "apiVersion": "v1",
   "kind": "ServiceAccount",
   "metadata": {
      "annotations": { },
      "name": "vault-init",
      "namespace": "vault"
   }
}
---
{
   "apiVersion": "rbac.authorization.k8s.io/v1",
   "kind": "Role",
   "metadata": {
      "annotations": { },
      "name": "vault-init",
      "namespace": "vault"
   },
   "rules": [
      {
         "apiGroups": [
            ""
         ],
         "resources": [
            "secrets"
         ],
         "verbs": [
            "*"
         ]
      }
   ]
}
---
{
   "apiVersion": "rbac.authorization.k8s.io/v1",
   "kind": "RoleBinding",
   "metadata": {
      "annotations": { },
      "name": "vault-init",
      "namespace": "vault"
   },
   "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "Role",
      "name": "vault-init"
   },
   "subjects": [
      {
         "kind": "ServiceAccount",
         "name": "vault-init"
      }
   ]
}
---
{
   "apiVersion": "batch/v1",
   "kind": "Job",
   "metadata": {
      "name": "vault-main-initializer",
      "namespace": "vault"
   },
   "spec": {
      "template": {
         "spec": {
            "containers": [
               {
                  "args": [ ],
                  "env": [
                     {
                        "name": "VAULT_ADDR",
                        "value": "https://vault.wirywolf.com"
                     },
                     {
                        "name": "VAULT_CACERT",
                        "value": "/vault-tls-web/tls.crt"
                     }
                  ],
                  "image": "ameypar/k8s-vault-initializer:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "initializer",
                  "volumeMounts": [
                     {
                        "mountPath": "/vault-tls-web",
                        "name": "vault-tls-web"
                     }
                  ]
               }
            ],
            "restartPolicy": "Never",
            "serviceAccountName": "vault-init",
            "volumes": [
               {
                  "name": "vault-tls-web",
                  "secret": {
                     "secretName": "wildcard-tls-secret"
                  }
               }
            ]
         }
      }
   }
}
---
{
   "apiVersion": "batch/v1",
   "kind": "Job",
   "metadata": {
      "name": "vault-unsealer-initializer",
      "namespace": "vault"
   },
   "spec": {
      "template": {
         "spec": {
            "containers": [
               {
                  "args": [
                     "-vault-for-autounseal"
                  ],
                  "env": [
                     {
                        "name": "VAULT_ADDR",
                        "value": "https://vault-unsealer.wirywolf.com"
                     },
                     {
                        "name": "VAULT_CACERT",
                        "value": "/vault-tls-web/tls.crt"
                     }
                  ],
                  "image": "ameypar/k8s-vault-initializer:latest",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "initializer",
                  "volumeMounts": [
                     {
                        "mountPath": "/vault-tls-web",
                        "name": "vault-tls-web"
                     }
                  ]
               }
            ],
            "restartPolicy": "Never",
            "serviceAccountName": "vault-init",
            "volumes": [
               {
                  "name": "vault-tls-web",
                  "secret": {
                     "secretName": "wildcard-tls-secret"
                  }
               }
            ]
         }
      }
   }
}
---
{
   "apiVersion": "v1",
   "data": {
      "config-init.hcl": "exit_after_auth = true\n\npid_file = \"/home/vault/pidfile\"\n\nauto_auth {\n  method \"kubernetes\" {\n    mount_path = \"auth/kubernetes\"\n    config = {\n      role = \"autounseal\"\n    }\n  }\n}\n\ntemplate {\n  destination = \"/vault/secrets/server-config\"\n  contents = <<-EOT\n    disable_mlock = true\n    // log_level = \"debug\"\n    ui = true\n    // For peers in the raft to talk to each other\n    listener \"tcp\" {\n      tls_disable = 0\n      tls_cert_file = \"/vault-tls-internal/tls.crt\"\n      tls_key_file = \"/vault-tls-internal/tls.key\"\n      address = \"[::]:8200\"\n      cluster_address = \"[::]:8201\"\n    }\n    // For clients to talk to the cluster\n    listener \"tcp\" {\n      tls_disable = 0\n      tls_cert_file = \"/vault-tls-web/tls.crt\"\n      tls_key_file = \"/vault-tls-web/tls.key\"\n      address = \"[::]:8300\"\n      cluster_address = \"[::]:8301\"\n    }\n    seal \"transit\" {\n      address = \"https://vault-unsealer.wirywolf.com\"\n      disable_renewal = \"false\"\n      key_name = \"autounseal\"\n      mount_path = \"transit/\"\n      tls_skip_verify = \"true\"\n      {{ with secret \"auth/token/lookup-self\" -}}\n      token = \"{{ .Data.id }}\"\n      {{ end }}\n    }\n    storage \"raft\" {\n      path = \"/vault/data\"\n      retry_join {\n        leader_api_addr = \"https://vault-0.vault-internal:8200\"\n        leader_ca_cert_file = \"/vault-tls-internal/tls.crt\"\n      }\n      retry_join {\n        leader_api_addr = \"https://vault-1.vault-internal:8200\"\n        leader_ca_cert_file = \"/vault-tls-internal/tls.crt\"\n      }\n      retry_join {\n        leader_api_addr = \"https://vault-2.vault-internal:8200\"\n        leader_ca_cert_file = \"/vault-tls-internal/tls.crt\"\n      }\n    }\n    service_registration \"kubernetes\" {}\n    EOT\n}\n"
   },
   "kind": "ConfigMap",
   "metadata": {
      "name": "vault-agent-autounseal",
      "namespace": "vault"
   }
}
---
{
   "apiVersion": "traefik.containo.us/v1alpha1",
   "kind": "IngressRouteTCP",
   "metadata": {
      "name": "vault",
      "namespace": "vault"
   },
   "spec": {
      "entryPoints": [
         "websecure"
      ],
      "routes": [
         {
            "match": "HostSNI(`vault.wirywolf.com`)",
            "services": [
               {
                  "name": "vault-ui",
                  "port": 8300,
                  "weight": 1
               }
            ]
         }
      ],
      "tls": {
         "passthrough": true
      }
   }
}
---
{
   "apiVersion": "traefik.containo.us/v1alpha1",
   "kind": "IngressRouteTCP",
   "metadata": {
      "name": "vault-unsealer",
      "namespace": "vault"
   },
   "spec": {
      "entryPoints": [
         "websecure"
      ],
      "routes": [
         {
            "match": "HostSNI(`vault-unsealer.wirywolf.com`)",
            "services": [
               {
                  "name": "vault-unsealer",
                  "port": 8200,
                  "weight": 1
               }
            ]
         }
      ],
      "tls": {
         "passthrough": true
      }
   }
}
...
