alertmanager:
  alertmanagerSpec:
    useExistingSecret: true
    configSecret: %(config_secret)s
    podMetadata:
      labels:
        vault-injector: enabled
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/role: "alert-manager"
        vault.hashicorp.com/service: %(vault_address)s
        vault.hashicorp.com/agent-inject-secret-slack-webhook-url: "tokens/data/slack"
        vault.hashicorp.com/agent-inject-template-slack-webhook-url: |
          {{- with secret "tokens/data/slack" -}}
          {{- .Data.data.alarm_webhook_url -}}
          {{- end -}}
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 2Gi
prometheus:
  prometheusSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 2Gi
  thanosRulerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          resources:
            requests:
              storage: 2Gi
defaultRules:
  rules:
    etcd: false
kubeEtcd:
  enabled: false
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: true
  endpoints:
    - %(controller_ip)s
  service:
    enabled: true
    port: 10257
    targetPort: 10257
kubeScheduler:
  enabled: true
  endpoints:
    - %(controller_ip)s
  service:
    enabled: true
    port: 10259
    targetPort: 10259
kubeProxy:
  enabled: true
  endpoints:
    - %(controller_ip)s
