---
{
   "apiVersion": "v1",
   "kind": "Namespace",
   "metadata": {
      "name": "databases"
   }
}
---
{
   "apiVersion": "v1",
   "data": { },
   "kind": "Secret",
   "metadata": {
      "name": "postgresql-initial-password",
      "namespace": "databases"
   },
   "stringData": {
      "postgres-password": "postgrespassword"
   },
   "type": "Opaque"
}
---
{
   "apiVersion": "source.toolkit.fluxcd.io/v1beta2",
   "kind": "HelmRepository",
   "metadata": {
      "name": "bitnami",
      "namespace": "flux-system"
   },
   "spec": {
      "interval": "24h",
      "url": "https://charts.bitnami.com/bitnami"
   }
}
---
{
   "apiVersion": "helm.toolkit.fluxcd.io/v2beta1",
   "kind": "HelmRelease",
   "metadata": {
      "name": "postgresql",
      "namespace": "flux-system"
   },
   "spec": {
      "chart": {
         "spec": {
            "chart": "postgresql",
            "interval": "12h",
            "sourceRef": {
               "kind": "HelmRepository",
               "name": "bitnami",
               "namespace": "flux-system"
            },
            "version": "11.6.8"
         }
      },
      "dependsOn": [
         {
            "name": "longhorn"
         },
         {
            "name": "metallb"
         }
      ],
      "install": {
         "createNamespace": true
      },
      "interval": "30m",
      "releaseName": "postgresql",
      "targetNamespace": "databases",
      "values": {
         "global": {
            "postgresql": {
               "auth": {
                  "existingSecret": "postgresql-initial-password"
               }
            },
            "storageClass": "longhorn"
         },
         "primary": {
            "persistence": {
               "size": "1Gi",
               "storageClass": "longhorn"
            },
            "service": {
               "loadBalancerIP": "192.168.80.11",
               "type": "LoadBalancer"
            }
         },
         "tls": {
            "certFilename": "tls.crt",
            "certKeyFilename": "tls.key",
            "certificatesSecret": "wildcard-tls-secret",
            "enabled": true
         }
      }
   }
}
---
{
   "apiVersion": "v1",
   "kind": "PersistentVolumeClaim",
   "metadata": {
      "name": "mariadb-data",
      "namespace": "databases"
   },
   "spec": {
      "accessModes": [
         "ReadWriteMany"
      ],
      "resources": {
         "requests": {
            "storage": "2Gi"
         }
      },
      "storageClassName": "longhorn"
   }
}
---
{
   "apiVersion": "v1",
   "kind": "Service",
   "metadata": {
      "name": "mariadb",
      "namespace": "databases"
   },
   "spec": {
      "loadBalancerIP": "192.168.80.14",
      "ports": [
         {
            "name": "tcp",
            "port": 3306,
            "targetPort": 3306
         }
      ],
      "selector": {
         "app.kubernetes.io/name": "mariadb"
      },
      "type": "LoadBalancer"
   }
}
---
{
   "apiVersion": "apps/v1",
   "kind": "StatefulSet",
   "metadata": {
      "name": "mariadb",
      "namespace": "databases"
   },
   "spec": {
      "replicas": 1,
      "selector": {
         "matchLabels": {
            "app.kubernetes.io/name": "mariadb"
         }
      },
      "serviceName": "mariadb",
      "template": {
         "metadata": {
            "labels": {
               "app.kubernetes.io/name": "mariadb"
            }
         },
         "spec": {
            "containers": [
               {
                  "env": [
                     {
                        "name": "MARIADB_ROOT_PASSWORD",
                        "value": "mariadbrootpassword"
                     }
                  ],
                  "image": "mariadb:10.10",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "mariadb",
                  "ports": [
                     {
                        "containerPort": 3306,
                        "name": "tcp"
                     }
                  ],
                  "resources": {
                     "requests": {
                        "cpu": "250m"
                     }
                  },
                  "volumeMounts": [
                     {
                        "mountPath": "/var/lib/mysql",
                        "name": "mariadb-data"
                     },
                     {
                        "mountPath": "/etc/mysql/conf.d",
                        "name": "mariadb-config"
                     },
                     {
                        "mountPath": "/certs",
                        "name": "mariadb-certs"
                     }
                  ]
               }
            ],
            "volumes": [
               {
                  "name": "mariadb-data",
                  "persistentVolumeClaim": {
                     "claimName": "mariadb-data"
                  }
               },
               {
                  "configMap": {
                     "name": "mariadb-config"
                  },
                  "name": "mariadb-config"
               },
               {
                  "name": "mariadb-certs",
                  "secret": {
                     "secretName": "wildcard-tls-secret"
                  }
               }
            ]
         }
      },
      "updateStrategy": {
         "type": "RollingUpdate"
      }
   }
}
...
